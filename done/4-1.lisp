(in-package :cs325-user)

(defun rotate-array (arr)
  (let* ((n (car (array-dimensions arr)))
         (rotated-arr (make-array (list n n))))
    (dotimes (x n)
      (dotimes (y n)
        (setf (aref rotated-arr x y) (aref arr (1- (- n y)) x))))
    rotated-arr))

(defun nrotate-array (arr)
  (let* ((n (car (array-dimensions arr)))
         (index (1- n)))
    (dotimes (x (floor n 2))
      (dotimes (y (- index (+ (* x 2))))
        (let ((z (+ y x)))
          (rotatef (aref arr (- index z) x)
                   (aref arr (- index x) (- index z))
                   (aref arr z (- index x))
                   (aref arr x z))))))
  arr)